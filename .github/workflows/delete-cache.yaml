name: Delete cache

on:
  workflow_dispatch:
    inputs:
      oldest-cache-entries:
        description: Oldest cache entries
        required: true
        default: 1
        type: number

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  get-cache-keys:
    name: Get cache keys
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: get-gh-cache-keys
        name: Get Github cache keys
        run: |
          CACHE_KEYS=$(gh cache list --order asc --limit ${{ inputs.oldest-cache-entries }} --json key --jq '.[].key')
          echo $CACHE_KEYS
          echo "cacheKeys=$CACHE_KEYS" >> $GITHUB_OUTPUT
    outputs:
      cacheKeys: "[${{ steps.get-gh-cache-keys.outputs.cacheKeys }}]"

  delete-cache:
    name: Delete cache
    runs-on: ubuntu-latest
    needs: get-cache-keys
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        cache-key: ${{ needs.get-cache-keys.outputs.cacheKeys }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete Github cache ${{ matrix.cache-key }}
        run: |
          gh cache delete ${{ matrix.cache-key }}

        # run: |
        #   CACHE_KEYS=$(gh cache list --order asc --limit ${{ inputs.oldest-cache-entries }} --json key --jq '.[].key')
        #   set +e
        #   for CACHE_KEY in $CACHE_KEYS
        #   do
        #     echo "Deleting $CACHE_KEY..."
        #     gh cache delete $CACHE_KEY
        #   done
