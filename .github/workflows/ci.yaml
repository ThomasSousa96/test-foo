name: CI

on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches:
      - main

env: 
  BASE_IMAGE_MAJOR_VERSION: 1
  BASE_IMAGE_MINOR_VERSION: 22
  BASE_IMAGE_TAG: 1.22.3-bullseye
  BASE_IMAGE_NAME_PREFIX: go
  IMAGE_NAME: ${{ github.repository	}}
  PUSH_TO_DOCKER_HUB: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
  PUSH_TO_GHCR: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
  GHCR_ADDRESS: ghcr.io

jobs:
  dependency-review:
    name: Dependency review
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency review
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: true
          fail-on-scopes: runtime,development,unknown
          license-check: true
          vulnerability-check: true

  sonnar:
    name: Sonnar scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    name: Build and push
    needs:
      - dependency-review
      - sonnar
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Define env.IMAGE_NAMES
        run: |
          IMAGE_NAMES=$IMAGE_NAME
          if [[ "$PUSH_TO_GHCR" == "true" ]]; then
            GHCR_IMAGE_NAME="$GHCR_ADDRESS/$IMAGE_NAME"
            IMAGE_NAMES="$IMAGE_NAMES,$GHCR_IMAGE_NAME"
          fi
          echo "IMAGE_NAMES=$IMAGE_NAMES" >> $GITHUB_ENV

      - id: docker_meta
        name: Extract docker metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAMES }}
          tags: |
            type=semver,pattern={{major}}-${{ env.BASE_IMAGE_NAME_PREFIX }}-${{ env.BASE_IMAGE_MAJOR_VERSION }}
            type=semver,pattern={{major}}-${{ env.BASE_IMAGE_NAME_PREFIX }}-${{ env.BASE_IMAGE_MAJOR_VERSION }}.${{ env.BASE_IMAGE_MINOR_VERSION }}
            type=semver,pattern={{major}}.{{minor}}-${{ env.BASE_IMAGE_NAME_PREFIX }}-${{ env.BASE_IMAGE_MAJOR_VERSION }}.${{ env.BASE_IMAGE_MINOR_VERSION }}
            type=semver,pattern={{version}}-${{ env.BASE_IMAGE_NAME_PREFIX }}-${{ env.BASE_IMAGE_TAG }}
            type=ref,event=pr

      - name: Generate build summary
        env:
          BUILD_SUMMARY: |
            # Docker image :rocket:

            ## Tags
            
            ```
            ${{ steps.docker_meta.outputs.tags }}
            ```

            ## Labels
            
            ```
            ${{ steps.docker_meta.outputs.labels }}
            ```

            ## Annotations

            ```
            ${{ steps.docker_meta.outputs.annotations }}
            ```

            ### Metadata

            ```json
            ${{ steps.docker_meta.outputs.metadata }}
            ```

        run: |
          echo "$BUILD_SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Login to the Docker Hub
        if: ${{ env.PUSH_TO_DOCKER_HUB }}
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to the Github Container Registry (GHCR)
        if: ${{ env.PUSH_TO_GHCR }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_ADDRESS }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ env.PUSH_TO_DOCKER_HUB || env.PUSH_TO_GHCR }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          annotations: ${{ steps.docker_meta.outputs.annotations }}
          build-args: |
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: mode=max

    outputs:
      tags: ${{ steps.docker_meta.outputs.tags }}

  create-release:
    name: Create release
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Github release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTES: |
            # Version ${{ github.ref_name }}
            
            This is a test

            ## Image: 

            ```
            ${{ needs.build-and-push.outputs.tags }}
            ```
            
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            --notes "$NOTES" \
            --latest \
            --verify-tag \
            --generate-notes \
            --target main \
            --discussion-category "General"
  
  # sbom-upload:
  #   name: SBOM upload
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: SBOM upload
  #       uses: advanced-security/spdx-dependency-submission-action@v0.0.1
  #       with:
  #         filePath: "_manifest/spdx_2.2/"
