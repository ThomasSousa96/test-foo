name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

env: 
  GO_MAJOR_VERSION: 1
  GO_MAJOR_MINOR_VERSION: 1.22
  GO_VERSION: 1.22.3
  
  BASE_IMAGE_OS_VERSION: bullseye
  BASE_IMAGE_VERSION: 1.22.3-bullseye
  
  IMAGE_NAME: go
  IMAGE_MAJOR_VERSION: 1
  IMAGE_MAJOR_MINOR_VERSION: 1.0
  IMAGE_VERSION: 1.0.0

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     version_prefix: [
    #       "1", # Major image version
    #       "1.0", # Major and minor image version
    #       "1.0.0" # Image version
    #     ]
    #     suffix_version: [
    #       "1", # Go major version
    #       "-1-bullseye", # Go major version - base image OS version
    #       "-1.22", # Go major and minor version
    #       "-1.22-bullseye", # Go major and minor version - base image OS version
    #       "-1.22.3", # Go version
    #       "-1.22.3-bullseye", # Base image version
    #     ]
    #     include:
    #       - version_prefix: "latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: docker_meta
        name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            BASE_IMAGE_VERSION=${{ env.BASE_IMAGE_VERSION }}
